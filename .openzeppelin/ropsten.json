{
  "manifestVersion": "3.1",
  "impls": {
    "887622ba29d060f12e77e2ee1043737b47c11da1c9fc67125be20cd18a1b6319": {
      "address": "0xe75617FCD31cfC63a7B0834B226B76890a6000c4",
      "txHash": "0xf215f512c9c8862244ba52e1b31bf4ec4f9b81087049879dc90d20732f078511",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1973_storage)",
            "src": "openzeppelin/access/AccessControl.sol:59"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/AccessControl.sol:211"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "openzeppelin/token/ERC20/ERC20.sol:38"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "openzeppelin/token/ERC20/ERC20.sol:40"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "openzeppelin/token/ERC20/ERC20.sol:42"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "openzeppelin/token/ERC20/ERC20.sol:46"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:318"
          },
          {
            "contract": "ERC20BurnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/token/ERC20/ERC20Burnable.sol:54"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "openzeppelin/utils/Pausable.sol:27"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/utils/Pausable.sol:85"
          },
          {
            "contract": "ERC20PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/token/ERC20/ERC20Pausable.sol:40"
          },
          {
            "contract": "ERC20PresetMinterPauserUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/presets/ERC20PresetMinterPauser.sol:102"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1973_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          }
        }
      }
    },
    "f5b2224001f3f0e94379781ddd7fb1b711c27bdb4a5ce3ae85369ecc064c32aa": {
      "address": "0x6140896a2051f63aA95Cc22e2b24f0fA68547226",
      "txHash": "0x72ad3d12bd4d4e3853b9fcb50130206b47da2d42b573331d74c474f06e6915f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "openzeppelin/access/Ownable.sol:19"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/Ownable.sol:79"
          },
          {
            "contract": "LockUpPool",
            "label": "PENALTY_RATE",
            "type": "t_uint256",
            "src": "LockUpPool.sol:16"
          },
          {
            "contract": "LockUpPool",
            "label": "PLATFORM_FEE_RATE",
            "type": "t_uint256",
            "src": "LockUpPool.sol:17"
          },
          {
            "contract": "LockUpPool",
            "label": "SECONDS_IN_MONTH",
            "type": "t_uint256",
            "src": "LockUpPool.sol:18"
          },
          {
            "contract": "LockUpPool",
            "label": "emergencyMode",
            "type": "t_bool",
            "src": "LockUpPool.sol:20"
          },
          {
            "contract": "LockUpPool",
            "label": "tokenStats",
            "type": "t_mapping(t_address,t_struct(TokenStats)130_storage)",
            "src": "LockUpPool.sol:52"
          },
          {
            "contract": "LockUpPool",
            "label": "pools",
            "type": "t_array(t_address)dyn_storage",
            "src": "LockUpPool.sol:55"
          },
          {
            "contract": "LockUpPool",
            "label": "userLockUps",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserLockUp)115_storage))",
            "src": "LockUpPool.sol:58"
          },
          {
            "contract": "LockUpPool",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "LockUpPool.sol:304"
          },
          {
            "contract": "WRNRewardPool",
            "label": "WRNToken",
            "type": "t_contract(ERC20PresetMinterPauserUpgradeSafe)2805",
            "src": "WRNRewardPool.sol:12"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_START_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:14"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_PER_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:15"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_END_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:16"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_EARLY_BONUS_END_BLOCK",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:17"
          },
          {
            "contract": "WRNRewardPool",
            "label": "REWARD_EARLY_BONUS_BOOST",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:18"
          },
          {
            "contract": "WRNRewardPool",
            "label": "totalMultiplier",
            "type": "t_uint256",
            "src": "WRNRewardPool.sol:20"
          },
          {
            "contract": "WRNRewardPool",
            "label": "wrnStats",
            "type": "t_mapping(t_address,t_struct(WRNStats)1131_storage)",
            "src": "WRNRewardPool.sol:33"
          },
          {
            "contract": "WRNRewardPool",
            "label": "userWRNRewards",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserWRNReward)1136_storage))",
            "src": "WRNRewardPool.sol:36"
          },
          {
            "contract": "WRNRewardPool",
            "label": "devAddress",
            "type": "t_address",
            "src": "WRNRewardPool.sol:39"
          },
          {
            "contract": "WRNRewardPool",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "WRNRewardPool.sol:231"
          }
        ],
        "types": {
          "t_contract(ERC20PresetMinterPauserUpgradeSafe)2805": {
            "label": "contract ERC20PresetMinterPauserUpgradeSafe"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(WRNStats)1131_storage)": {
            "label": "mapping(address => struct WRNRewardPool.WRNStats)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserWRNReward)1136_storage))": {
            "label": "mapping(address => mapping(address => struct WRNRewardPool.UserWRNReward))"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(TokenStats)130_storage)": {
            "label": "mapping(address => struct LockUpPool.TokenStats)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserLockUp)115_storage))": {
            "label": "mapping(address => mapping(address => struct LockUpPool.UserLockUp))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x47240E3386F2D71F69f038e44C2C356337D3C08e",
    "txHash": "0x46aaabd96a027c5cacf4403b89e2a808f6b4d8869b392af3c7aa3b2b25824089"
  }
}
